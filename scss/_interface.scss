$color-btn-text: $darkblue;
// $color-btn-default: $text-color; dont use after create maps for btns colors
// $color-btn-hot: $red;
// $color-btn-cool: $blue;
$roundness: 20px 0px 20px 0px; //creating a list


%btn {     //with % create a Shadow class
    display: inline-block;
    padding: 6px 12px;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    border: none;
    border-radius: 4px;
    font-family: $font-headings;
    user-select: none;
    color: $background; //$text-color;
}

//4.now can remove it
//1.create 2 lists
// $color-btn-names: 'default', 'hot', 'cool';
// $color-btn-values: $text-color, $red, $blue;

//5.creating maps in Sass(arrays)
$color-btns:( 
    default: $text-color,
    hot: $red,
    cool: $blue,
    purple: $purple
    ) ;

//6. little change in 2.
@each $name, $value in $color-btns {
    //$i: index($color-btn-names, $name);
    .btn-#{$name} {
        @extend %btn;
        // background-color: nth($color-btn-values, $i);
        background-color: $value;
    }
}
//2.programmatically construct classes
// @each $name in $color-btn-names {
//     $i: index($color-btn-names, $name);
//     .btn-#{$name} {
//         @extend %btn;
//         background-color: nth($color-btn-values, $i);
//     }
// }
//3.now can remove it
// .btn-default {
//     background: $color-btn-default;
//     @extend %btn; //with % create a Shadow class
// }
// .btn-hot {
//     @extend %btn;//with % create a Shadow class
//     background: $color-btn-hot;
// }
// .btn-cool {
//     @extend %btn;//with % create a Shadow class
//     background: $color-btn-cool;
// }

.grid {
    margin-bottom: 10px;
    @include clearfix;
    .item {
        float: left;
        @include imageGrid(3, 2%);
    }
    img {
        display: block;
        border-radius: $roundness;//nth($roundness, 1);//show - for 1 type //$roundness//10px 0px 10px 0px;
        max-width: 100%;
        height: auto;
    }
}